<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cloud Developer</title>
    <link>http://localhost:1313/docs/2.-exercises/2.-service-layer/</link>
    <description>Recent content on Cloud Developer</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="http://localhost:1313/docs/2.-exercises/2.-service-layer/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>http://localhost:1313/docs/2.-exercises/2.-service-layer/1.-implement-service-layer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/2.-exercises/2.-service-layer/1.-implement-service-layer/</guid>
      <description>&lt;p&gt;title = &amp;ldquo;1. Implement Service Layer&amp;rdquo;&#xA;weight = 1&#xA;date = 2025-02-16&#xA;draft = true&#xA;+++&lt;/p&gt;&#xA;&lt;h2 id=&#34;goal&#34;&gt;&#xA;  Goal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#goal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Refactor the newsletter functionality by implementing a &lt;strong&gt;service layer&lt;/strong&gt; with dependency injection and async operations.&lt;/p&gt;&#xA;&lt;h2 id=&#34;learning-objectives&#34;&gt;&#xA;  Learning Objectives&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#learning-objectives&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;By the end of this exercise, you will:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Create an &lt;strong&gt;interface&lt;/strong&gt; and &lt;strong&gt;service implementation&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;Implement &lt;strong&gt;dependency injection&lt;/strong&gt; in ASP.NET Core&lt;/li&gt;&#xA;&lt;li&gt;Use the &lt;strong&gt;Result pattern&lt;/strong&gt; for operation outcomes&lt;/li&gt;&#xA;&lt;li&gt;Work with &lt;strong&gt;async/await&lt;/strong&gt; patterns&lt;/li&gt;&#xA;&lt;li&gt;Understand &lt;strong&gt;service lifetimes&lt;/strong&gt; in ASP.NET Core&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;step-by-step-instructions&#34;&gt;&#xA;  Step-by-Step Instructions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-by-step-instructions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;step-1-create-the-operation-result-pattern&#34;&gt;&#xA;  Step 1: Create the Operation Result Pattern&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-1-create-the-operation-result-pattern&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Create a new class &lt;code&gt;OperationResult.cs&lt;/code&gt; in the Models folder&lt;/li&gt;&#xA;&lt;li&gt;Implement the Result pattern for handling operation outcomes&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;Models/OperationResult.cs&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/docs/2.-exercises/2.-service-layer/2.-project-structure-and-unit-tests/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/2.-exercises/2.-service-layer/2.-project-structure-and-unit-tests/</guid>
      <description>&lt;p&gt;title = &amp;ldquo;2. Implement Unit Tests and Organize Solution&amp;rdquo;&#xA;weight = 2&#xA;date = 2025-02-16&#xA;draft = true&#xA;+++&lt;/p&gt;&#xA;&lt;h2 id=&#34;goal&#34;&gt;&#xA;  Goal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#goal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Organize the solution with proper project structure and implement unit tests for the service layer.&lt;/p&gt;&#xA;&lt;h2 id=&#34;learning-objectives&#34;&gt;&#xA;  Learning Objectives&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#learning-objectives&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;By the end of this exercise, you will:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Understand .NET solution and project organization&lt;/li&gt;&#xA;&lt;li&gt;Learn how to create and structure test projects&lt;/li&gt;&#xA;&lt;li&gt;Write unit tests using xUnit&lt;/li&gt;&#xA;&lt;li&gt;Use dependency injection in unit tests&lt;/li&gt;&#xA;&lt;li&gt;Work with test assertions and test patterns&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;step-by-step-instructions&#34;&gt;&#xA;  Step-by-Step Instructions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-by-step-instructions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;step-1-move-the-web-project-to-src-folder&#34;&gt;&#xA;  Step 1: Move the Web project to /src folder&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-1-move-the-web-project-to-src-folder&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Open a terminal in your project root folder&lt;/li&gt;&#xA;&lt;li&gt;Create a new solution file:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;step-1-create-the-solution-structure&#34;&gt;&#xA;  Step 1: Create the Solution Structure&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-1-create-the-solution-structure&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Delete the .sln file&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
