<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cloud Developer</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Cloud Developer</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 16 Feb 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1. Hello World</title>
      <link>http://localhost:1313/docs/exercises/1.-presentation-layer/1.-hello-world/</link>
      <pubDate>Sun, 16 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/exercises/1.-presentation-layer/1.-hello-world/</guid>
      <description>&lt;h1 id=&#34;hello-world&#34;&gt;&#xA;  Hello World&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#hello-world&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Create the app&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dotnet new mvc&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dotnet new gitignore&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Run the app&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dotnet run&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Prepare the app for git&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dotnet new gitignore&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git init&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git add .&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git commit -m &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Create MVC webapp&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Use VS Code to publish the repository to Github. After that you can push commits with:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git push&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>2. Create A Form With Basic HTML</title>
      <link>http://localhost:1313/docs/exercises/1.-presentation-layer/2.-create-a-form-using-basic-html/</link>
      <pubDate>Sun, 16 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/exercises/1.-presentation-layer/2.-create-a-form-using-basic-html/</guid>
      <description>&lt;h1 id=&#34;create-a-form-with-basic-html&#34;&gt;&#xA;  Create A Form With Basic HTML&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#create-a-form-with-basic-html&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;goal&#34;&gt;&#xA;  Goal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#goal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Create a &lt;strong&gt;basic HTML form&lt;/strong&gt; that collects &lt;strong&gt;name&lt;/strong&gt; and &lt;strong&gt;email&lt;/strong&gt; and submits it via &lt;code&gt;POST&lt;/code&gt;. This step introduces fundamental form handling in an ASP.NET Core MVC web application without using advanced features like model binding or validation.&lt;/p&gt;&#xA;&lt;h2 id=&#34;learning-objectives&#34;&gt;&#xA;  Learning Objectives&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#learning-objectives&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;By the end of this exercise, you will:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Understand how to create an HTML form with basic input fields.&lt;/li&gt;&#xA;&lt;li&gt;Learn how to submit form data using an HTTP &lt;code&gt;POST&lt;/code&gt; request.&lt;/li&gt;&#xA;&lt;li&gt;Implement a controller to handle form display and submission.&lt;/li&gt;&#xA;&lt;li&gt;Display submitted data in the application console.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;step-by-step-instructions&#34;&gt;&#xA;  Step-by-Step Instructions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-by-step-instructions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;step-1-create-a-controller&#34;&gt;&#xA;  Step 1: Create a Controller&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-1-create-a-controller&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Navigate to the &lt;code&gt;Controllers&lt;/code&gt; folder and create a new file named &lt;code&gt;NewsletterController.cs&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Add action methods to &lt;strong&gt;display the form&lt;/strong&gt; and &lt;strong&gt;handle form submission&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;File:&lt;/strong&gt; &lt;code&gt;Controllers/NewsletterController.cs&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>3. Helper Tags and Model Binding</title>
      <link>http://localhost:1313/docs/exercises/1.-presentation-layer/3.-implement-helper-tags-and-model-binding/</link>
      <pubDate>Sun, 16 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/exercises/1.-presentation-layer/3.-implement-helper-tags-and-model-binding/</guid>
      <description>&lt;h1 id=&#34;helper-tags-and-model-binding&#34;&gt;&#xA;  Helper Tags and Model Binding&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#helper-tags-and-model-binding&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;goal&#34;&gt;&#xA;  &lt;strong&gt;Goal&lt;/strong&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#goal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Enhance the existing form by introducing &lt;strong&gt;ASP.NET Core helper tags&lt;/strong&gt;, &lt;strong&gt;model binding (without annotations)&lt;/strong&gt;, and &lt;strong&gt;ViewBag for feedback messages&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;learning-objectives&#34;&gt;&#xA;  Learning Objectives&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#learning-objectives&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;By the end of this exercise, you will:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use &lt;strong&gt;ASP.NET Core Tag Helpers&lt;/strong&gt; (&lt;code&gt;asp-for&lt;/code&gt;, &lt;code&gt;asp-action&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;li&gt;Implement &lt;strong&gt;model binding&lt;/strong&gt; without validation attributes&lt;/li&gt;&#xA;&lt;li&gt;Utilize &lt;strong&gt;ViewBag&lt;/strong&gt; to display feedback messages after form submission&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;step-by-step-instructions&#34;&gt;&#xA;  Step-by-Step Instructions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-by-step-instructions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;step-1-create-a-model-for-form-data&#34;&gt;&#xA;  Step 1: Create a Model for Form Data&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-1-create-a-model-for-form-data&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Navigate to the &lt;code&gt;Models&lt;/code&gt; folder and create a new file named &lt;code&gt;Subscriber.cs&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Define a simple class with &lt;code&gt;Name&lt;/code&gt; and &lt;code&gt;Email&lt;/code&gt; properties.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;Models/Subscriber.cs&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>4. Data Annotations and Client-Side Validation</title>
      <link>http://localhost:1313/docs/exercises/1.-presentation-layer/4.-client-side-validation-with-data-annotations/</link>
      <pubDate>Sun, 16 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/exercises/1.-presentation-layer/4.-client-side-validation-with-data-annotations/</guid>
      <description>&lt;h1 id=&#34;data-annotations-and-client-side-validation&#34;&gt;&#xA;  Data Annotations and Client-Side Validation&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#data-annotations-and-client-side-validation&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;goal&#34;&gt;&#xA;  Goal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#goal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Enhance the existing form by introducing &lt;strong&gt;data annotations&lt;/strong&gt; for &lt;strong&gt;client-side validation&lt;/strong&gt; to improve user experience and enforce input constraints.&lt;/p&gt;&#xA;&lt;h2 id=&#34;learning-objectives&#34;&gt;&#xA;  Learning Objectives&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#learning-objectives&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;By the end of this exercise, you will:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use &lt;strong&gt;data annotations&lt;/strong&gt; (&lt;code&gt;[Required]&lt;/code&gt;, &lt;code&gt;[EmailAddress]&lt;/code&gt;, &lt;code&gt;[StringLength]&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;li&gt;Enable &lt;strong&gt;client-side validation&lt;/strong&gt; using ASP.NET Core built-in validation&lt;/li&gt;&#xA;&lt;li&gt;Improve form feedback with validation messages&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;step-by-step-instructions&#34;&gt;&#xA;  Step-by-Step Instructions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-by-step-instructions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;step-1-update-the-model-with-data-annotations&#34;&gt;&#xA;  Step 1: Update the Model with Data Annotations&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-1-update-the-model-with-data-annotations&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Open &lt;code&gt;Subscriber.cs&lt;/code&gt; in the &lt;code&gt;Models&lt;/code&gt; folder.&lt;/li&gt;&#xA;&lt;li&gt;Add &lt;strong&gt;validation attributes&lt;/strong&gt; to enforce required fields and format constraints.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;Models/Subscriber.cs&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>5. Server-Side Validation and Improved Feedback</title>
      <link>http://localhost:1313/docs/exercises/1.-presentation-layer/5.-server-side-validation/</link>
      <pubDate>Sun, 16 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/exercises/1.-presentation-layer/5.-server-side-validation/</guid>
      <description>&lt;h1 id=&#34;server-side-validation-and-improved-feedback&#34;&gt;&#xA;  Server-Side Validation and Improved Feedback&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#server-side-validation-and-improved-feedback&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;goal&#34;&gt;&#xA;  Goal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#goal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Enhance the form by introducing &lt;strong&gt;server-side validation&lt;/strong&gt;, managing a &lt;strong&gt;list of subscribers&lt;/strong&gt;, and improving feedback handling using &lt;strong&gt;TempData&lt;/strong&gt; and &lt;strong&gt;model-level errors&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;learning-objectives&#34;&gt;&#xA;  Learning Objectives&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#learning-objectives&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;By the end of this exercise, you will:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Implement &lt;strong&gt;server-side validation&lt;/strong&gt; for better security.&lt;/li&gt;&#xA;&lt;li&gt;Store &lt;strong&gt;subscribers in a list&lt;/strong&gt; within the controller.&lt;/li&gt;&#xA;&lt;li&gt;Use &lt;strong&gt;regular expressions&lt;/strong&gt; to validate email format.&lt;/li&gt;&#xA;&lt;li&gt;Prevent &lt;strong&gt;duplicate email signups&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Replace &lt;strong&gt;ViewBag with TempData&lt;/strong&gt; for better feedback persistence.&lt;/li&gt;&#xA;&lt;li&gt;Use &lt;strong&gt;ModelState.AddModelError&lt;/strong&gt; to improve error handling.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;step-by-step-instructions&#34;&gt;&#xA;  Step-by-Step Instructions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-by-step-instructions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;step-1-update-the-model-with-server-side-validation&#34;&gt;&#xA;  Step 1: Update the Model with Server-Side Validation&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-1-update-the-model-with-server-side-validation&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Open &lt;code&gt;Subscriber.cs&lt;/code&gt; in the &lt;code&gt;Models&lt;/code&gt; folder.&lt;/li&gt;&#xA;&lt;li&gt;Improve &lt;strong&gt;client-side email validation&lt;/strong&gt; using &lt;strong&gt;regular expressions&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;Models/Subscriber.cs&lt;/code&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
