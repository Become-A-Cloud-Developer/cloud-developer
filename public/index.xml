<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cloud Developer</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Cloud Developer</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 27 Feb 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1. Implement the Repository Pattern</title>
      <link>http://localhost:1313/docs/2.-exercises/3.-data-layer/1.-implementing-repository-pattern/</link>
      <pubDate>Thu, 27 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/2.-exercises/3.-data-layer/1.-implementing-repository-pattern/</guid>
      <description>&lt;h1 id=&#34;implement-the-repository-pattern&#34;&gt;&#xA;  Implement the Repository Pattern&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#implement-the-repository-pattern&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;goal&#34;&gt;&#xA;  Goal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#goal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Implement a &lt;strong&gt;thread-safe in-memory database&lt;/strong&gt; using the repository pattern for the newsletter subscription system.&lt;/p&gt;&#xA;&lt;h2 id=&#34;learning-objectives&#34;&gt;&#xA;  Learning Objectives&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#learning-objectives&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;By the end of this exercise, you will:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Understand the &lt;strong&gt;Repository Pattern&lt;/strong&gt; and its benefits&lt;/li&gt;&#xA;&lt;li&gt;Implement a &lt;strong&gt;thread-safe in-memory database&lt;/strong&gt; using &lt;code&gt;ConcurrentDictionary&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Create an &lt;strong&gt;abstraction layer&lt;/strong&gt; between data access and business logic&lt;/li&gt;&#xA;&lt;li&gt;Register and use &lt;strong&gt;repositories&lt;/strong&gt; with dependency injection&lt;/li&gt;&#xA;&lt;li&gt;Apply proper &lt;strong&gt;async/await patterns&lt;/strong&gt; with repositories&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;step-by-step-instructions&#34;&gt;&#xA;  Step-by-Step Instructions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-by-step-instructions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;step-1-create-the-repository-interface&#34;&gt;&#xA;  Step 1: Create the Repository Interface&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-1-create-the-repository-interface&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Create a new interface &lt;code&gt;ISubscriberRepository.cs&lt;/code&gt; in the Repositories folder&lt;/li&gt;&#xA;&lt;li&gt;Define all CRUD operations needed for subscribers&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;File:&lt;/strong&gt; &lt;code&gt;Repositories/ISubscriberRepository.cs&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>1. Hello World</title>
      <link>http://localhost:1313/docs/2.-exercises/1.-presentation-layer/1.-hello-world/</link>
      <pubDate>Sun, 16 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/2.-exercises/1.-presentation-layer/1.-hello-world/</guid>
      <description>&lt;h1 id=&#34;hello-world-mvc-application&#34;&gt;&#xA;  Hello World MVC Application&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#hello-world-mvc-application&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;goal&#34;&gt;&#xA;  Goal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#goal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Create a basic ASP.NET Core MVC application, run it locally, and prepare it for version control with Git.&lt;/p&gt;&#xA;&lt;h2 id=&#34;learning-objectives&#34;&gt;&#xA;  Learning Objectives&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#learning-objectives&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;By the end of this exercise, you will:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Create a new ASP.NET Core MVC project&lt;/li&gt;&#xA;&lt;li&gt;Understand the basic project structure of an MVC application&lt;/li&gt;&#xA;&lt;li&gt;Run a web application locally&lt;/li&gt;&#xA;&lt;li&gt;Initialize Git for version control&lt;/li&gt;&#xA;&lt;li&gt;Publish your code to GitHub&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;step-by-step-instructions&#34;&gt;&#xA;  Step-by-Step Instructions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-by-step-instructions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;step-1-create-a-new-aspnet-core-mvc-application&#34;&gt;&#xA;  Step 1: Create a New ASP.NET Core MVC Application&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-1-create-a-new-aspnet-core-mvc-application&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Open a terminal or command prompt&lt;/li&gt;&#xA;&lt;li&gt;Navigate to your desired project location&lt;/li&gt;&#xA;&lt;li&gt;Run the following command to create a new MVC application:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dotnet new mvc -n CloudSoft&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;ðŸ’¡ &lt;strong&gt;Information&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>1. Implement Service Layer</title>
      <link>http://localhost:1313/docs/2.-exercises/2.-service-layer/1.-implement-service-layer/</link>
      <pubDate>Sun, 16 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/2.-exercises/2.-service-layer/1.-implement-service-layer/</guid>
      <description>&lt;h1 id=&#34;implement-service-layer&#34;&gt;&#xA;  Implement Service Layer&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#implement-service-layer&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;goal&#34;&gt;&#xA;  Goal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#goal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Refactor the newsletter functionality by implementing a &lt;strong&gt;service layer&lt;/strong&gt; with dependency injection and async operations.&lt;/p&gt;&#xA;&lt;h2 id=&#34;learning-objectives&#34;&gt;&#xA;  Learning Objectives&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#learning-objectives&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;By the end of this exercise, you will:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Create an &lt;strong&gt;interface&lt;/strong&gt; and &lt;strong&gt;service implementation&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;Implement &lt;strong&gt;dependency injection&lt;/strong&gt; in ASP.NET Core&lt;/li&gt;&#xA;&lt;li&gt;Use the &lt;strong&gt;Result pattern&lt;/strong&gt; for operation outcomes&lt;/li&gt;&#xA;&lt;li&gt;Work with &lt;strong&gt;async/await&lt;/strong&gt; patterns&lt;/li&gt;&#xA;&lt;li&gt;Understand &lt;strong&gt;service lifetimes&lt;/strong&gt; in ASP.NET Core&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;step-by-step-instructions&#34;&gt;&#xA;  Step-by-Step Instructions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-by-step-instructions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;step-1-create-the-operation-result-pattern&#34;&gt;&#xA;  Step 1: Create the Operation Result Pattern&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-1-create-the-operation-result-pattern&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Create a new class &lt;code&gt;OperationResult.cs&lt;/code&gt; in the Models folder&lt;/li&gt;&#xA;&lt;li&gt;Implement the Result pattern for handling operation outcomes&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;Models/OperationResult.cs&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>1. Creating a Virtual Network (vNet)</title>
      <link>http://localhost:1313/docs/4.-exercises/2.-network/exercise-1---creating-a-virtual-network/</link>
      <pubDate>Mon, 02 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/4.-exercises/2.-network/exercise-1---creating-a-virtual-network/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;&#xA;  Overview&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#overview&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;The objective of this exercise is to create a Virtual Network (vNet) with a default subnet using the Azure Portal, laying the foundation for a secure network architecture. You will also provision three servers having the roles Web Server, Reverse Proxy and Bastion Host respectively. Finally, firewall rules will be created to secure the network using Azure Network Security Groups (NSG)&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/NetworkOverview.png&#34; alt=&#34;NetworkOverview&#34; /&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;step-1-log-in-to-azure-portal&#34;&gt;&#xA;  Step 1: Log in to Azure Portal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-1-log-in-to-azure-portal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Open &lt;a href=&#34;https://portal.azure.com&#34;&gt;https://portal.azure.com&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Sign in with your Azure account credentials.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;step-2-create-a-virtual-network&#34;&gt;&#xA;  Step 2: Create a Virtual Network&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-2-create-a-virtual-network&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;In the Azure Portal, use the search bar at the top to search for &lt;strong&gt;&amp;ldquo;Virtual Networks&amp;rdquo;&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Select &lt;strong&gt;Virtual Networks&lt;/strong&gt; from the search results or from the left menu&lt;/li&gt;&#xA;&lt;li&gt;Click the &lt;strong&gt;+ Create&lt;/strong&gt; button at the top of the Virtual Networks page.&lt;/li&gt;&#xA;&lt;li&gt;On the &lt;strong&gt;Basics&lt;/strong&gt; tab, fill in the following information:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Subscription&lt;/strong&gt;: Select your subscription.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Resource Group&lt;/strong&gt;: Choose an existing resource group or create a new one (e.g., &lt;code&gt;DemoRG&lt;/code&gt;).&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Name&lt;/strong&gt;: Enter &lt;code&gt;DemoVNet&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Region&lt;/strong&gt;: Choose a region close to your location (e.g., &lt;code&gt;North Europe&lt;/code&gt;).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Click &lt;strong&gt;Review + Create&lt;/strong&gt; and then click Create to deploy the Virtual Network.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;ðŸ’¡ &lt;strong&gt;Information&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>1. Provisioning a VM via Azure Portal</title>
      <link>http://localhost:1313/docs/4.-exercises/1.-virtual-machine/exercise-1---provisioning-a-vm-via-azure-portal-with-username-and-password/</link>
      <pubDate>Mon, 25 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/4.-exercises/1.-virtual-machine/exercise-1---provisioning-a-vm-via-azure-portal-with-username-and-password/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;&#xA;  Overview&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#overview&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;This exercise introduces the Azure Portal, guiding you through the creation of a Virtual Machine (VM). You will configure an Ubuntu Linux VM with a username/password for access and verify that the VM is running successfully by logging into the VM from Azure Cloud Shell.&lt;/p&gt;&#xA;&lt;h3 id=&#34;step-1-log-in-to-azure-portal&#34;&gt;&#xA;  Step 1: Log in to Azure Portal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-1-log-in-to-azure-portal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Open a web browser and navigate to the &lt;a href=&#34;https://portal.azure.com/&#34;&gt;Azure Portal&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Sign in using your Azure account credentials.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;step-2-create-a-resource-group&#34;&gt;&#xA;  Step 2: Create a Resource Group&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-2-create-a-resource-group&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;In the Azure Portal, search for &lt;strong&gt;&amp;ldquo;Resource groups&amp;rdquo;&lt;/strong&gt; in the search bar.&lt;/li&gt;&#xA;&lt;li&gt;Click &lt;strong&gt;&amp;ldquo;Create&amp;rdquo;&lt;/strong&gt; and fill in the following:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Subscription&lt;/strong&gt;: Choose your subscription.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Resource Group Name&lt;/strong&gt;: &lt;code&gt;LabResourceGroup&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Region&lt;/strong&gt;: Choose a region (e.g. &lt;code&gt;North Europe&lt;/code&gt;).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Click &lt;strong&gt;Review + Create&lt;/strong&gt; and then &lt;strong&gt;Create&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;ðŸ’¡ &lt;strong&gt;Information&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>2. Implementing MongoDB Repository</title>
      <link>http://localhost:1313/docs/2.-exercises/3.-data-layer/2.-implementing-mongodb-repository/</link>
      <pubDate>Thu, 27 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/2.-exercises/3.-data-layer/2.-implementing-mongodb-repository/</guid>
      <description>&lt;h1 id=&#34;implementing-mongodb-repository-development&#34;&gt;&#xA;  Implementing MongoDB Repository (Development)&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#implementing-mongodb-repository-development&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;goal&#34;&gt;&#xA;  Goal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#goal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Implement a &lt;strong&gt;MongoDB repository&lt;/strong&gt; for subscribers and configure a &lt;strong&gt;local MongoDB environment&lt;/strong&gt; using Docker with a &lt;strong&gt;feature flag toggle&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;learning-objectives&#34;&gt;&#xA;  Learning Objectives&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#learning-objectives&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;By the end of this exercise, you will:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Understand how to &lt;strong&gt;integrate MongoDB&lt;/strong&gt; with ASP.NET Core&lt;/li&gt;&#xA;&lt;li&gt;Use &lt;strong&gt;Docker Compose&lt;/strong&gt; to create a development database environment&lt;/li&gt;&#xA;&lt;li&gt;Implement the &lt;strong&gt;Repository Pattern&lt;/strong&gt; with MongoDB&lt;/li&gt;&#xA;&lt;li&gt;Configure &lt;strong&gt;dependency injection&lt;/strong&gt; with MongoDB&lt;/li&gt;&#xA;&lt;li&gt;Apply the &lt;strong&gt;Options Pattern&lt;/strong&gt; for database configuration&lt;/li&gt;&#xA;&lt;li&gt;Use &lt;strong&gt;Feature Flags&lt;/strong&gt; for toggling implementations&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;step-by-step-instructions&#34;&gt;&#xA;  Step-by-Step Instructions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-by-step-instructions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;step-1-update-the-subscriber-model-with-mongodb-annotations&#34;&gt;&#xA;  Step 1: Update the Subscriber Model with MongoDB Annotations&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-1-update-the-subscriber-model-with-mongodb-annotations&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Add the MongoDB.Driver NuGet package to the project using the terminal command&lt;/p&gt;</description>
    </item>
    <item>
      <title>2. Create A Form With Basic HTML</title>
      <link>http://localhost:1313/docs/2.-exercises/1.-presentation-layer/2.-create-a-form-using-basic-html/</link>
      <pubDate>Sun, 16 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/2.-exercises/1.-presentation-layer/2.-create-a-form-using-basic-html/</guid>
      <description>&lt;h1 id=&#34;create-a-form-with-basic-html&#34;&gt;&#xA;  Create A Form With Basic HTML&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#create-a-form-with-basic-html&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;goal&#34;&gt;&#xA;  Goal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#goal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Create a &lt;strong&gt;basic HTML form&lt;/strong&gt; that collects &lt;strong&gt;name&lt;/strong&gt; and &lt;strong&gt;email&lt;/strong&gt; and submits it via &lt;code&gt;POST&lt;/code&gt;. This step introduces fundamental form handling in an ASP.NET Core MVC web application without using advanced features like model binding or validation.&lt;/p&gt;&#xA;&lt;h2 id=&#34;learning-objectives&#34;&gt;&#xA;  Learning Objectives&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#learning-objectives&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;By the end of this exercise, you will:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Understand how to create an HTML form with basic input fields.&lt;/li&gt;&#xA;&lt;li&gt;Learn how to submit form data using an HTTP &lt;code&gt;POST&lt;/code&gt; request.&lt;/li&gt;&#xA;&lt;li&gt;Implement a controller to handle form display and submission.&lt;/li&gt;&#xA;&lt;li&gt;Display submitted data in the application console.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;step-by-step-instructions&#34;&gt;&#xA;  Step-by-Step Instructions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-by-step-instructions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;step-1-create-a-controller&#34;&gt;&#xA;  Step 1: Create a Controller&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-1-create-a-controller&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Navigate to the &lt;code&gt;Controllers&lt;/code&gt; folder and create a new file named &lt;code&gt;NewsletterController.cs&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Add action methods to &lt;strong&gt;display the form&lt;/strong&gt; and &lt;strong&gt;handle form submission&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;File:&lt;/strong&gt; &lt;code&gt;Controllers/NewsletterController.cs&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>2. Creating a Virtual Network with Enhanced Security</title>
      <link>http://localhost:1313/docs/4.-exercises/2.-network/exercise-2---creating-a-virtual-network-with-enhanced-security/</link>
      <pubDate>Mon, 02 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/4.-exercises/2.-network/exercise-2---creating-a-virtual-network-with-enhanced-security/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;&#xA;  Overview&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#overview&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;The objective of this exercise is to create a Virtual Network (vNet) with a subnet secured by a Network Security Group (NSG) attached to the subnet itself. You will also provision three servers with specific roles: Web Server, Reverse Proxy, and Bastion Host. Application Security Groups (ASGs) will be configured for the Reverse Proxy and Bastion Host, and all server configurations will be automated using &lt;strong&gt;cloud-init&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/NetworkOverview.png&#34; alt=&#34;NetworkOverview&#34; /&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>2. Provisioning a VM with SSH Keys and Exploring Linux</title>
      <link>http://localhost:1313/docs/4.-exercises/1.-virtual-machine/exercise-2---provisioning-a-vm-with-ssh-keys-and-exploring-linux/</link>
      <pubDate>Mon, 25 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/4.-exercises/1.-virtual-machine/exercise-2---provisioning-a-vm-with-ssh-keys-and-exploring-linux/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;&#xA;  Overview&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#overview&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;This exercise introduces secure SSH authentication using &lt;strong&gt;Azure Portal&amp;rsquo;s Generate Key Pair feature&lt;/strong&gt;. You will also connect to the VM using SSH from your local (your laptop) Terminal. While logged in we will explore the Linux filesystem with basic command-line utilities.&lt;/p&gt;&#xA;&lt;h3 id=&#34;step-1-log-in-to-azure-portal&#34;&gt;&#xA;  Step 1: Log in to Azure Portal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-1-log-in-to-azure-portal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Open a web browser and navigate to the &lt;a href=&#34;https://portal.azure.com/&#34;&gt;Azure Portal&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Sign in using your Azure account credentials.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;step-2-create-a-virtual-machine-with-ssh-key-pair&#34;&gt;&#xA;  Step 2: Create a Virtual Machine with SSH Key Pair&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-2-create-a-virtual-machine-with-ssh-key-pair&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Navigate to &lt;strong&gt;Virtual Machines&lt;/strong&gt; and click &lt;strong&gt;Create&lt;/strong&gt; &amp;gt; &lt;strong&gt;Azure Virtual machine&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Configure the VM:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Subscription&lt;/strong&gt;: Select your subscription.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Create a new Resource Group&lt;/strong&gt;: &lt;code&gt;LabSSHResourceGroup&lt;/code&gt;. (You can create a new resource group here if you donÂ´t have one already)&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Virtual Machine Name&lt;/strong&gt;: &lt;code&gt;LabSSHVM&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Region&lt;/strong&gt;: Same as the resource group.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Zone options&lt;/strong&gt;: Select &lt;em&gt;Azure-selected zone&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Image&lt;/strong&gt;: Select &lt;code&gt;Ubuntu Server 24.04 LTS&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Size&lt;/strong&gt;: Choose &lt;code&gt;Standard_B1s&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Authentication Type&lt;/strong&gt;: Select &lt;strong&gt;SSH Public Key&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Username&lt;/strong&gt;: &lt;code&gt;azureuser&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Under &lt;strong&gt;SSH Public Key Source&lt;/strong&gt;, select &lt;strong&gt;Generate new key pair&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Configure inbound ports:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Check &lt;strong&gt;Allow selected ports&lt;/strong&gt; and select &lt;strong&gt;HTTP (80)&lt;/strong&gt; and &lt;strong&gt;SSH (22)&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Note the name for your key pair (e.g., &lt;code&gt;LabSSHKey&lt;/code&gt;) and click &lt;strong&gt;Download private key and create resource&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;ðŸ’¡ &lt;strong&gt;Information&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>3. Azure Blob Storage for Images</title>
      <link>http://localhost:1313/docs/2.-exercises/3.-data-layer/3.-azure-blob-storage-for-images/</link>
      <pubDate>Thu, 27 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/2.-exercises/3.-data-layer/3.-azure-blob-storage-for-images/</guid>
      <description>&lt;h1 id=&#34;azure-blob-storage-for-images&#34;&gt;&#xA;  Azure Blob Storage for Images&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#azure-blob-storage-for-images&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;goal&#34;&gt;&#xA;  Goal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#goal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Create a &lt;strong&gt;hero section&lt;/strong&gt; in the About page with an image background that uses &lt;strong&gt;local storage&lt;/strong&gt; in development and &lt;strong&gt;Azure Blob Storage&lt;/strong&gt; in production.&lt;/p&gt;&#xA;&lt;h2 id=&#34;learning-objectives&#34;&gt;&#xA;  Learning Objectives&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#learning-objectives&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;By the end of this exercise, you will:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Implement a &lt;strong&gt;service abstraction&lt;/strong&gt; for image serving&lt;/li&gt;&#xA;&lt;li&gt;Configure &lt;strong&gt;Azure Blob Storage&lt;/strong&gt; for production image hosting&lt;/li&gt;&#xA;&lt;li&gt;Create a &lt;strong&gt;feature flag&lt;/strong&gt; to toggle between local and cloud storage&lt;/li&gt;&#xA;&lt;li&gt;Build a &lt;strong&gt;responsive hero section&lt;/strong&gt; with a background image&lt;/li&gt;&#xA;&lt;li&gt;Use the &lt;strong&gt;Options Pattern&lt;/strong&gt; for Azure Blob Storage configuration&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;step-by-step-instructions&#34;&gt;&#xA;  Step-by-Step Instructions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-by-step-instructions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;step-1-create-the-image-service-interface&#34;&gt;&#xA;  Step 1: Create the Image Service Interface&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-1-create-the-image-service-interface&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Create a new interface &lt;code&gt;IImageService.cs&lt;/code&gt; in a new &lt;code&gt;Storage&lt;/code&gt; folder&lt;/p&gt;</description>
    </item>
    <item>
      <title>3. Helper Tags and Model Binding</title>
      <link>http://localhost:1313/docs/2.-exercises/1.-presentation-layer/3.-implement-helper-tags-and-model-binding/</link>
      <pubDate>Sun, 16 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/2.-exercises/1.-presentation-layer/3.-implement-helper-tags-and-model-binding/</guid>
      <description>&lt;h1 id=&#34;helper-tags-and-model-binding&#34;&gt;&#xA;  Helper Tags and Model Binding&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#helper-tags-and-model-binding&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;goal&#34;&gt;&#xA;  &lt;strong&gt;Goal&lt;/strong&gt;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#goal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Enhance the existing form by introducing &lt;strong&gt;ASP.NET Core helper tags&lt;/strong&gt;, &lt;strong&gt;model binding (without annotations)&lt;/strong&gt;, and &lt;strong&gt;ViewBag for feedback messages&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;learning-objectives&#34;&gt;&#xA;  Learning Objectives&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#learning-objectives&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;By the end of this exercise, you will:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use &lt;strong&gt;ASP.NET Core Tag Helpers&lt;/strong&gt; (&lt;code&gt;asp-for&lt;/code&gt;, &lt;code&gt;asp-action&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;li&gt;Implement &lt;strong&gt;model binding&lt;/strong&gt; without validation attributes&lt;/li&gt;&#xA;&lt;li&gt;Utilize &lt;strong&gt;ViewBag&lt;/strong&gt; to display feedback messages after form submission&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;step-by-step-instructions&#34;&gt;&#xA;  Step-by-Step Instructions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-by-step-instructions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;step-1-create-a-model-for-form-data&#34;&gt;&#xA;  Step 1: Create a Model for Form Data&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-1-create-a-model-for-form-data&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Navigate to the &lt;code&gt;Models&lt;/code&gt; folder and create a new file named &lt;code&gt;Subscriber.cs&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Define a simple class with &lt;code&gt;Name&lt;/code&gt; and &lt;code&gt;Email&lt;/code&gt; properties.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;Models/Subscriber.cs&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>3. Automating Nginx Installation with Custom Data Scripts</title>
      <link>http://localhost:1313/docs/4.-exercises/1.-virtual-machine/exercise-3---automating-nginx-installation-with-custom-data-scripts/</link>
      <pubDate>Mon, 25 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/4.-exercises/1.-virtual-machine/exercise-3---automating-nginx-installation-with-custom-data-scripts/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;&#xA;  Overview&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#overview&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;This exercise introduces the use of &lt;strong&gt;custom data scripts&lt;/strong&gt; to automate the installation of Nginx during VM provisioning. You will also edit the default Nginx index page to display custom content.&lt;/p&gt;&#xA;&lt;h3 id=&#34;step-1-log-in-to-azure-portal&#34;&gt;&#xA;  Step 1: Log in to Azure Portal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-1-log-in-to-azure-portal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Open a web browser and navigate to the &lt;a href=&#34;https://portal.azure.com/&#34;&gt;Azure Portal&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Sign in using your Azure account credentials.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;step-2-create-a-virtual-machine-with-custom-data&#34;&gt;&#xA;  Step 2: Create a Virtual Machine with Custom Data&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-2-create-a-virtual-machine-with-custom-data&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Navigate to &lt;strong&gt;Virtual Machines&lt;/strong&gt; in the Azure Portal and click &lt;strong&gt;Create&lt;/strong&gt; &amp;gt; &lt;strong&gt;Virtual machine&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>4. Data Annotations and Client-Side Validation</title>
      <link>http://localhost:1313/docs/2.-exercises/1.-presentation-layer/4.-client-side-validation-with-data-annotations/</link>
      <pubDate>Sun, 16 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/2.-exercises/1.-presentation-layer/4.-client-side-validation-with-data-annotations/</guid>
      <description>&lt;h1 id=&#34;data-annotations-and-client-side-validation&#34;&gt;&#xA;  Data Annotations and Client-Side Validation&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#data-annotations-and-client-side-validation&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;goal&#34;&gt;&#xA;  Goal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#goal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Enhance the existing form by introducing &lt;strong&gt;data annotations&lt;/strong&gt; for &lt;strong&gt;client-side validation&lt;/strong&gt; to improve user experience and enforce input constraints.&lt;/p&gt;&#xA;&lt;h2 id=&#34;learning-objectives&#34;&gt;&#xA;  Learning Objectives&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#learning-objectives&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;By the end of this exercise, you will:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use &lt;strong&gt;data annotations&lt;/strong&gt; (&lt;code&gt;[Required]&lt;/code&gt;, &lt;code&gt;[EmailAddress]&lt;/code&gt;, &lt;code&gt;[StringLength]&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;li&gt;Enable &lt;strong&gt;client-side validation&lt;/strong&gt; using ASP.NET Core built-in validation&lt;/li&gt;&#xA;&lt;li&gt;Improve form feedback with validation messages&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;step-by-step-instructions&#34;&gt;&#xA;  Step-by-Step Instructions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-by-step-instructions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;step-1-update-the-model-with-data-annotations&#34;&gt;&#xA;  Step 1: Update the Model with Data Annotations&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-1-update-the-model-with-data-annotations&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Open &lt;code&gt;Subscriber.cs&lt;/code&gt; in the &lt;code&gt;Models&lt;/code&gt; folder.&lt;/li&gt;&#xA;&lt;li&gt;Add &lt;strong&gt;validation attributes&lt;/strong&gt; to enforce required fields and format constraints.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;Models/Subscriber.cs&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>4. Creating a Resource Group Using AZ CLI</title>
      <link>http://localhost:1313/docs/4.-exercises/1.-virtual-machine/exercise-4---creating-a-resource-group-using-az-cli/</link>
      <pubDate>Mon, 25 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/4.-exercises/1.-virtual-machine/exercise-4---creating-a-resource-group-using-az-cli/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;&#xA;  Overview&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#overview&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;This exercise introduces the &lt;strong&gt;Azure CLI&lt;/strong&gt; for managing Azure resources. You will use Azure CLI commands to create a resource group and verify its creation.&lt;/p&gt;&#xA;&lt;h3 id=&#34;step-1-log-in-to-azure-cloud-shell&#34;&gt;&#xA;  Step 1: Log in to Azure Cloud Shell&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-1-log-in-to-azure-cloud-shell&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Open the &lt;a href=&#34;https://portal.azure.com/&#34;&gt;Azure Portal&lt;/a&gt; and click the &lt;strong&gt;Cloud Shell&lt;/strong&gt; icon (top-right corner).&lt;/li&gt;&#xA;&lt;li&gt;Select &lt;strong&gt;Bash&lt;/strong&gt; as your shell environment if prompted.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;ðŸ’¡ &lt;strong&gt;Information&lt;/strong&gt;&lt;br&gt;&#xA;The Azure Cloud Shell is a Terminal in the Azure Portal that comes pre-configured with the Azure CLI. It enables you to run CLI commands without additional setup.&lt;/p&gt;</description>
    </item>
    <item>
      <title>5. Server-Side Validation and Improved Feedback</title>
      <link>http://localhost:1313/docs/2.-exercises/1.-presentation-layer/5.-server-side-validation/</link>
      <pubDate>Sun, 16 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/2.-exercises/1.-presentation-layer/5.-server-side-validation/</guid>
      <description>&lt;h1 id=&#34;server-side-validation-and-improved-feedback&#34;&gt;&#xA;  Server-Side Validation and Improved Feedback&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#server-side-validation-and-improved-feedback&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;goal&#34;&gt;&#xA;  Goal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#goal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Enhance the form by introducing &lt;strong&gt;server-side validation&lt;/strong&gt;, managing a &lt;strong&gt;list of subscribers&lt;/strong&gt;, and improving feedback handling using &lt;strong&gt;TempData&lt;/strong&gt; and &lt;strong&gt;model-level errors&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;learning-objectives&#34;&gt;&#xA;  Learning Objectives&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#learning-objectives&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;By the end of this exercise, you will:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Implement &lt;strong&gt;server-side validation&lt;/strong&gt; for better security.&lt;/li&gt;&#xA;&lt;li&gt;Store &lt;strong&gt;subscribers in a list&lt;/strong&gt; within the controller.&lt;/li&gt;&#xA;&lt;li&gt;Use &lt;strong&gt;regular expressions&lt;/strong&gt; to validate email format.&lt;/li&gt;&#xA;&lt;li&gt;Prevent &lt;strong&gt;duplicate email signups&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Replace &lt;strong&gt;ViewBag with TempData&lt;/strong&gt; for better feedback persistence.&lt;/li&gt;&#xA;&lt;li&gt;Use &lt;strong&gt;ModelState.AddModelError&lt;/strong&gt; to improve error handling.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;step-by-step-instructions&#34;&gt;&#xA;  Step-by-Step Instructions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-by-step-instructions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;step-1-update-the-model-with-server-side-validation&#34;&gt;&#xA;  Step 1: Update the Model with Server-Side Validation&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-1-update-the-model-with-server-side-validation&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Open &lt;code&gt;Subscriber.cs&lt;/code&gt; in the &lt;code&gt;Models&lt;/code&gt; folder.&lt;/li&gt;&#xA;&lt;li&gt;Improve &lt;strong&gt;client-side email validation&lt;/strong&gt; using &lt;strong&gt;regular expressions&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;Models/Subscriber.cs&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>6. Displaying a List of Subscribers</title>
      <link>http://localhost:1313/docs/2.-exercises/1.-presentation-layer/6.-display-a-list-of-subscribers/</link>
      <pubDate>Sun, 16 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/2.-exercises/1.-presentation-layer/6.-display-a-list-of-subscribers/</guid>
      <description>&lt;h1 id=&#34;displaying-a-list-of-subscribers&#34;&gt;&#xA;  Displaying a List of Subscribers&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#displaying-a-list-of-subscribers&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;goal&#34;&gt;&#xA;  Goal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#goal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Enhance the application by adding a &lt;strong&gt;new view to list all subscribers&lt;/strong&gt; and updating the &lt;strong&gt;navigation bar&lt;/strong&gt; to include a button linking to the new page.&lt;/p&gt;&#xA;&lt;h2 id=&#34;learning-objectives&#34;&gt;&#xA;  Learning Objectives&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#learning-objectives&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;By the end of this exercise, you will:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Create a &lt;strong&gt;new view&lt;/strong&gt; to display a list of subscribers.&lt;/li&gt;&#xA;&lt;li&gt;Modify the &lt;strong&gt;controller&lt;/strong&gt; to pass subscriber data to the view.&lt;/li&gt;&#xA;&lt;li&gt;Update the &lt;strong&gt;navigation bar&lt;/strong&gt; to provide access to the new page.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;step-by-step-instructions&#34;&gt;&#xA;  Step-by-Step Instructions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-by-step-instructions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;step-1-update-the-controller-to-provide-subscriber-data&#34;&gt;&#xA;  Step 1: Update the Controller to Provide Subscriber Data&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-1-update-the-controller-to-provide-subscriber-data&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Open &lt;code&gt;NewsletterController.cs&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Add a new action method to return a list of subscribers to the view.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;Controllers/NewsletterController.cs&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>7. Implement Unsubscribe Functionality</title>
      <link>http://localhost:1313/docs/2.-exercises/1.-presentation-layer/7.-implement-unsubscribe-feature/</link>
      <pubDate>Sun, 16 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/2.-exercises/1.-presentation-layer/7.-implement-unsubscribe-feature/</guid>
      <description>&lt;h1 id=&#34;implement-unsubscribe-functionality&#34;&gt;&#xA;  Implement Unsubscribe Functionality&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#implement-unsubscribe-functionality&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;goal&#34;&gt;&#xA;  Goal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#goal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Add the ability for users to &lt;strong&gt;unsubscribe&lt;/strong&gt; from the newsletter and enhance the subscriber list with &lt;strong&gt;action buttons&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;learning-objectives&#34;&gt;&#xA;  Learning Objectives&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#learning-objectives&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;By the end of this exercise, you will:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Add an &lt;strong&gt;unsubscribe action&lt;/strong&gt; to the controller&lt;/li&gt;&#xA;&lt;li&gt;Implement &lt;strong&gt;confirmation dialogs&lt;/strong&gt; for destructive actions&lt;/li&gt;&#xA;&lt;li&gt;Add &lt;strong&gt;action buttons&lt;/strong&gt; to table rows&lt;/li&gt;&#xA;&lt;li&gt;Handle &lt;strong&gt;POST requests&lt;/strong&gt; securely with &lt;strong&gt;anti-forgery tokens&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;step-by-step-instructions&#34;&gt;&#xA;  Step-by-Step Instructions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-by-step-instructions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;step-1-update-the-controller-with-unsubscribe-action&#34;&gt;&#xA;  Step 1: Update the Controller with Unsubscribe Action&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-1-update-the-controller-with-unsubscribe-action&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Open &lt;code&gt;NewsletterController.cs&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Add a new action method for handling unsubscribe requests&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;Controllers/NewsletterController.cs&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/docs/6.-exercises/1.-basic-ansible/exercise-1---environment-setup--ansible-installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/6.-exercises/1.-basic-ansible/exercise-1---environment-setup--ansible-installation/</guid>
      <description>&lt;h1 id=&#34;exercise-1-environment-setup--ansible-installation&#34;&gt;&#xA;  Exercise 1: Environment Setup &amp;amp; Ansible Installation&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#exercise-1-environment-setup--ansible-installation&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;goal&#34;&gt;&#xA;  Goal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#goal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Set up a consistent and isolated Ansible environment using Python virtual environments across different operating systems, ensuring you have a proper foundation for all subsequent exercises.&lt;/p&gt;&#xA;&lt;h2 id=&#34;learning-objectives&#34;&gt;&#xA;  Learning Objectives&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#learning-objectives&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;By the end of this exercise, you will:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Create &lt;strong&gt;Python virtual environments&lt;/strong&gt; to isolate Ansible installations&lt;/li&gt;&#xA;&lt;li&gt;Install &lt;strong&gt;Ansible&lt;/strong&gt; via pip in a controlled environment&lt;/li&gt;&#xA;&lt;li&gt;Understand &lt;strong&gt;Ansible command-line basics&lt;/strong&gt; and version information&lt;/li&gt;&#xA;&lt;li&gt;Create a simple &lt;strong&gt;inventory file&lt;/strong&gt; for Ansible&lt;/li&gt;&#xA;&lt;li&gt;Execute your first &lt;strong&gt;ad-hoc command&lt;/strong&gt; against localhost&lt;/li&gt;&#xA;&lt;li&gt;Configure &lt;strong&gt;Ansible settings&lt;/strong&gt; through ansible.cfg&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;prerequisites&#34;&gt;&#xA;  Prerequisites&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#prerequisites&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Basic command-line familiarity (Terminal on macOS/Linux, Command Prompt or PowerShell on Windows)&lt;/li&gt;&#xA;&lt;li&gt;Python 3.8 or newer installed on your system&lt;/li&gt;&#xA;&lt;li&gt;A text editor of your choice (VS Code recommended)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;step-by-step-instructions&#34;&gt;&#xA;  Step-by-Step Instructions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-by-step-instructions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;step-1-verify-python-installation&#34;&gt;&#xA;  Step 1: Verify Python Installation&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-1-verify-python-installation&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Open a terminal or command prompt on your system.&lt;/li&gt;&#xA;&lt;li&gt;Check that Python is installed and is version 3.8 or newer:&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python --version&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# or&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 --version&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;ðŸ’¡ &lt;strong&gt;Information&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/docs/6.-exercises/1.-basic-ansible/exercise-2-nginx-deployment-with-ansible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/6.-exercises/1.-basic-ansible/exercise-2-nginx-deployment-with-ansible/</guid>
      <description>&lt;h1 id=&#34;exercise-2-nginx-deployment-with-ansible&#34;&gt;&#xA;  Exercise 2: Nginx Deployment with Ansible&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#exercise-2-nginx-deployment-with-ansible&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;goal&#34;&gt;&#xA;  Goal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#goal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Create an Ansible role to install and configure Nginx with a custom welcome page, learning how to use templates, variables, and handlers to manage web server configurations.&lt;/p&gt;&#xA;&lt;h2 id=&#34;learning-objectives&#34;&gt;&#xA;  Learning Objectives&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#learning-objectives&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;By the end of this exercise, you will:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Create a complete &lt;strong&gt;Ansible role structure&lt;/strong&gt; with proper organization&lt;/li&gt;&#xA;&lt;li&gt;Use the &lt;strong&gt;apt module&lt;/strong&gt; to install packages&lt;/li&gt;&#xA;&lt;li&gt;Configure &lt;strong&gt;service management&lt;/strong&gt; to control Nginx&lt;/li&gt;&#xA;&lt;li&gt;Implement &lt;strong&gt;Jinja2 templates&lt;/strong&gt; for dynamic HTML and configuration files&lt;/li&gt;&#xA;&lt;li&gt;Configure &lt;strong&gt;Nginx settings&lt;/strong&gt; including custom port assignment&lt;/li&gt;&#xA;&lt;li&gt;Understand &lt;strong&gt;handlers&lt;/strong&gt; for service restart management&lt;/li&gt;&#xA;&lt;li&gt;Test and &lt;strong&gt;validate your deployment&lt;/strong&gt; with HTTP requests&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;prerequisites&#34;&gt;&#xA;  Prerequisites&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#prerequisites&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Completed Exercise 1 with a working Ansible installation&lt;/li&gt;&#xA;&lt;li&gt;Basic familiarity with web servers and HTTP&lt;/li&gt;&#xA;&lt;li&gt;Access to your Azure VM provisioned via SSH&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;step-by-step-instructions&#34;&gt;&#xA;  Step-by-Step Instructions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-by-step-instructions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;step-1-create-the-nginx-role-structure&#34;&gt;&#xA;  Step 1: Create the Nginx Role Structure&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-1-create-the-nginx-role-structure&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;First, let&amp;rsquo;s create the directory structure for our Nginx role:&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/docs/6.-exercises/1.-basic-ansible/exercise-3---.net-runtime-environment-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/6.-exercises/1.-basic-ansible/exercise-3---.net-runtime-environment-setup/</guid>
      <description>&lt;h1 id=&#34;exercise-3-net-runtime-environment-setup&#34;&gt;&#xA;  Exercise 3: .NET Runtime Environment Setup&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#exercise-3-net-runtime-environment-setup&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;goal&#34;&gt;&#xA;  Goal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#goal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Set up a complete environment for hosting .NET Core applications on your Azure VM, installing the necessary runtime components and configuring the server to run .NET applications as services.&lt;/p&gt;&#xA;&lt;h2 id=&#34;learning-objectives&#34;&gt;&#xA;  Learning Objectives&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#learning-objectives&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;By the end of this exercise, you will:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Create a role to install &lt;strong&gt;.NET Core runtime&lt;/strong&gt; dependencies&lt;/li&gt;&#xA;&lt;li&gt;Configure &lt;strong&gt;environment files&lt;/strong&gt; for application settings&lt;/li&gt;&#xA;&lt;li&gt;Set up &lt;strong&gt;systemd service templates&lt;/strong&gt; for application management&lt;/li&gt;&#xA;&lt;li&gt;Create &lt;strong&gt;directory structures&lt;/strong&gt; with proper permissions&lt;/li&gt;&#xA;&lt;li&gt;Implement &lt;strong&gt;role dependencies&lt;/strong&gt; between related components&lt;/li&gt;&#xA;&lt;li&gt;Understand &lt;strong&gt;environment variables&lt;/strong&gt; in .NET applications&lt;/li&gt;&#xA;&lt;li&gt;Test the &lt;strong&gt;.NET runtime environment&lt;/strong&gt; for proper configuration&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;prerequisites&#34;&gt;&#xA;  Prerequisites&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#prerequisites&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Completed Exercises 1-2&lt;/li&gt;&#xA;&lt;li&gt;Access to your Azure VM&lt;/li&gt;&#xA;&lt;li&gt;Basic understanding of web application hosting concepts&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;step-by-step-instructions&#34;&gt;&#xA;  Step-by-Step Instructions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-by-step-instructions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;step-1-create-the-net-runtime-role&#34;&gt;&#xA;  Step 1: Create the .NET Runtime Role&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-1-create-the-net-runtime-role&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;First, let&amp;rsquo;s create a role to install the .NET Core runtime:&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/docs/6.-exercises/1.-basic-ansible/exercise-4---configuring-nginx-as-a-reverse-proxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/6.-exercises/1.-basic-ansible/exercise-4---configuring-nginx-as-a-reverse-proxy/</guid>
      <description>&lt;h1 id=&#34;exercise-4-configuring-nginx-as-a-reverse-proxy&#34;&gt;&#xA;  Exercise 4: Configuring Nginx as a Reverse Proxy&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#exercise-4-configuring-nginx-as-a-reverse-proxy&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;goal&#34;&gt;&#xA;  Goal&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#goal&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Configure Nginx as a secure reverse proxy for your .NET application, implementing SSL encryption and security best practices to safely expose your application to the internet.&lt;/p&gt;&#xA;&lt;h2 id=&#34;learning-objectives&#34;&gt;&#xA;  Learning Objectives&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#learning-objectives&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;By the end of this exercise, you will:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Generate and configure &lt;strong&gt;SSL certificates&lt;/strong&gt; for secure communications&lt;/li&gt;&#xA;&lt;li&gt;Set up &lt;strong&gt;Nginx as a reverse proxy&lt;/strong&gt; for your .NET application&lt;/li&gt;&#xA;&lt;li&gt;Implement &lt;strong&gt;HTTP to HTTPS redirects&lt;/strong&gt; for improved security&lt;/li&gt;&#xA;&lt;li&gt;Configure &lt;strong&gt;security headers&lt;/strong&gt; to protect against common web vulnerabilities&lt;/li&gt;&#xA;&lt;li&gt;Create &lt;strong&gt;role dependencies&lt;/strong&gt; between nginx and proxy configuration&lt;/li&gt;&#xA;&lt;li&gt;Test and &lt;strong&gt;validate the complete setup&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;Understand the &lt;strong&gt;architecture of a web application deployment&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;prerequisites&#34;&gt;&#xA;  Prerequisites&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#prerequisites&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Completed Exercises 1-3&lt;/li&gt;&#xA;&lt;li&gt;Access to your Azure VM&lt;/li&gt;&#xA;&lt;li&gt;Basic understanding of HTTP, HTTPS, and web security concepts&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;step-by-step-instructions&#34;&gt;&#xA;  Step-by-Step Instructions&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-by-step-instructions&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;step-1-create-a-secure-reverse-proxy-role&#34;&gt;&#xA;  Step 1: Create a Secure Reverse Proxy Role&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#step-1-create-a-secure-reverse-proxy-role&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;First, let&amp;rsquo;s create a role for configuring Nginx as a reverse proxy with SSL:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
